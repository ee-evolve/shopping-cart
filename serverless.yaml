service: shopping-cart-api

custom:
  productTableName: 'products-${self:provider.stage}'
  basketTableName: 'baskets-${self:provider.stage}'

provider: 
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  profile: interview-api
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["ProductsDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["BasketsDynamoDBTable", "Arn" ] }
  environment:
    PRODUCTS_TABLE: ${self:custom.productTableName}
    BASKETS_TABLE: ${self:custom.basketTableName}


functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    ProductsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: productId
            AttributeType: S
        KeySchema:
          -
            AttributeName: productId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.productTableName}
    BasketsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: basketId
            AttributeType: S
        KeySchema:
          -
            AttributeName: basketId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.basketTableName}
